/* ======================================================= */
/* --- animations.scss (VERSIÓN MEJORADA Y OPTIMIZADA) --- */
/* ======================================================= */
/*
  Este archivo centraliza todas las animaciones del proyecto.
  Se divide en:
  1. Mixins: Bloques de código reutilizables para efectos complejos.
  2. Keyframes: Las definiciones de las animaciones.
  3. Clases de Utilidad: Clases que aplican directamente una animación.
*/

// --- 1. MIXINS DE ANIMACIÓN REUTILIZABLES ---
// Estos mixins encapsulan la lógica para efectos complejos, haciendo el
// código de los componentes más limpio.

/**
 * Mixin para el efecto de brillo de neón pulsante.
 * @param {color} $color1 - Color principal del brillo.
 * @param {color} $color2 - Color secundario del brillo.
 * @param {time} $duration - Duración de un ciclo de la animación.
 */
@mixin neon-pulse-effect($color1, $color2, $duration: 5s) {
    // Usamos las funciones de color de SASS para un control total.
    // Esto es más robusto que usar CSS variables dentro de RGBA en SASS.
    animation: neon-pulse $duration infinite alternate;
    
    // Almacenamos los colores en variables CSS para que los keyframes puedan acceder a ellos.
    --neon-color-1: #{$color1};
    --neon-color-2: #{$color2};
}

/**
 * Mixin para el efecto de "glitch" digital en un elemento.
 * Se aplica a un contenedor que tendrá la clase .glitch
 * y un atributo data-text con el contenido a mostrar.
 */
@mixin glitch-effect($bg-color, $glitch-color-1, $glitch-color-2) {
    position: relative;

    &.glitch {
        animation: glitch-main 0.3s linear both;

        &::before, &::after {
            content: attr(data-text); // Copia el texto desde el atributo
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: $bg-color; // Oculta el texto original debajo
            overflow: hidden;
        }

        &::before {
            left: 3px;
            text-shadow: -2px 0 $glitch-color-1;
            animation: glitch-anim-1 0.8s infinite linear alternate-reverse steps(2, end);
        }

        &::after {
            left: -3px;
            text-shadow: -2px 0 $glitch-color-2, 2px 2px $glitch-color-1;
            animation: glitch-anim-2 0.6s infinite linear alternate-reverse steps(2, end);
        }
    }
}


// --- 2. KEYFRAMES DE ANIMACIÓN ---

// --- Animaciones Generales ---
@keyframes fadeIn {
    from { transform: scale(0.8); opacity: 0; }
    to { transform: scale(1); opacity: 1; }
}

@keyframes fadeInScale-animation {
    to { opacity: 1; transform: scale(1); }
}

@keyframes pulse {
    0%, 100% { transform: scale(1); opacity: 1; }
    50% { transform: scale(1.2); opacity: 0.8; }
}

// --- Animaciones Específicas de Componentes ---

// Para el fondo de la rejilla
@keyframes move-grid {
    from { background-position: 0 0; }
    to { background-position: -96px -96px; }
}

// Para el hover de los botones
@keyframes arcoiris {
    0% { background-position: 0% 50%; }
    50% { background-position: 100% 50%; }
    100% { background-position: 0% 50%; }
}

// Para el efecto de onda en los botones
@keyframes ripple-effect {
    to { transform: scale(4); opacity: 0; }
}

// Para resaltar un ítem del historial
@keyframes history-item-highlight {
    0% { background-color: transparent; transform: scale(1); }
    50% { background-color: rgba(76, 175, 80, 0.4); transform: scale(1.02); }
    100% { background-color: transparent; transform: scale(1); }
}

// Para el contenedor principal (usado por el mixin neon-pulse-effect)
@keyframes neon-pulse {
    from {
        box-shadow: 0 0 5px rgba(var(--neon-color-1), 0.3),
                    0 0 10px rgba(var(--neon-color-1), 0.2),
                    0 0 20px rgba(var(--neon-color-2), 0.2),
                    inset 0 0 5px rgba(var(--neon-color-2), 0.1);
    }
    to {
        box-shadow: 0 0 10px rgba(var(--neon-color-1), 0.5),
                    0 0 20px rgba(var(--neon-color-1), 0.3),
                    0 0 40px rgba(var(--neon-color-2), 0.3),
                    inset 0 0 10px rgba(var(--neon-color-2), 0.2);
    }
}

// Para la pantalla (usado por el mixin glitch-effect)
@keyframes glitch-main { 0%, 100% { transform: translate(0); } 20% { transform: translate(-3px, 3px); } 40% { transform: translate(-3px, -3px); } 60% { transform: translate(3px, 3px); } 80% { transform: translate(3px, -3px); } }
@keyframes glitch-anim-1 { 0% { clip-path: inset(30% 0 60% 0); } 100% { clip-path: inset(50% 0 20% 0); } }
@keyframes glitch-anim-2 { 0% { clip-path: inset(80% 0 10% 0); } 100% { clip-path: inset(10% 0 75% 0); } }


// --- 3. CLASES DE UTILIDAD DE ANIMACIÓN ---
// Clases que puedes añadir a cualquier elemento para aplicar una animación simple.

.animate-fade-in-scale {
    opacity: 0;
    transform: scale(0.5);
    animation: fadeInScale-animation 0.5s forwards cubic-bezier(0.34, 1.56, 0.64, 1);
}

.pulse {
    animation: pulse 0.5s ease-in-out;
}
/* --- EN _animations.scss --- */

// ... (todas tus animaciones existentes aquí arriba)

// --- NUEVAS ANIMACIONES PARA EL "FLUJO DE DATOS CÓSMICO" ---

// Animación para la rejilla con perspectiva
@keyframes flow-grid {
    from {
        // Mueve la textura del fondo verticalmente
        background-position: 0 0;
    }
    to {
        // El valor negativo hace que fluya "hacia" el usuario
        background-position: 0 -1000px;
    }
}

// Animación para las partículas de datos (3 capas para efecto parallax)
@keyframes flow-particles-1 {
    from { transform: translateY(0%); }
    to { transform: translateY(-100%); }
}
@keyframes flow-particles-2 {
    from { transform: translateY(0%); }
    to { transform: translateY(-100%); }
}
@keyframes flow-particles-3 {
    from { transform: translateY(0%); }
    to { transform: translateY(-100%); }
}